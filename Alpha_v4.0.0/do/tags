!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AR	Makefile	/^AR = ar rcs$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CallBackCmpChar	DoubleLink.c	/^int CallBackCmpChar(const void *one, const void *two)$/;"	f
CallBackCmpChar	ds/DoubleLink.c	/^int CallBackCmpChar(const void *one, const void *two)$/;"	f
CallBackCmpId	ThreadTest.c	/^int CallBackCmpId(const void *one, const void *two)$/;"	f
CallBackCmpInt	DoubleLink.c	/^int CallBackCmpInt(const void *one, const void *two)$/;"	f
CallBackCmpInt	ds/DoubleLink.c	/^int CallBackCmpInt(const void *one, const void *two)$/;"	f
CallBackCmpOff	ThreadTest.c	/^int CallBackCmpOff(const void *one, const void *two)$/;"	f
CallBackCmpSId	ThreadTest.c	/^int CallBackCmpSId(const void *one, const void *two)$/;"	f
CallBackCmpSOff	ThreadTest.c	/^int CallBackCmpSOff(const void *one, const void *two)$/;"	f
CallBackCmpStr	DoubleLink.c	/^int CallBackCmpStr(const void *one, const void *two)$/;"	f
CallBackCmpStr	ds/DoubleLink.c	/^int CallBackCmpStr(const void *one, const void *two)$/;"	f
CallBackCmpStr_K	DoubleLink.c	/^int CallBackCmpStr_K(const void *one, const void *two)$/;"	f
CallBackCmpStr_K	ds/DoubleLink.c	/^int CallBackCmpStr_K(const void *one, const void *two)$/;"	f
CallBackDeleteNetPacket	ThreadTest.c	/^void CallBackDeleteNetPacket(DLNode *p)$/;"	f
CallBackDeleteNode	DoubleLink.c	/^void CallBackDeleteNode(DLNode *p)$/;"	f
CallBackDeleteNode	ds/DoubleLink.c	/^void CallBackDeleteNode(DLNode *p)$/;"	f
CallBackDropList	DoubleLink.c	/^void CallBackDropList(DLNode * temp)$/;"	f
CallBackDropList	ds/DoubleLink.c	/^void CallBackDropList(DLNode * temp)$/;"	f
CallBackDropNetList	ThreadTest.c	/^void CallBackDropNetList(DLNode * temp)$/;"	f
CallBackDropNetPacket	ThreadTest.c	/^void CallBackDropNetPacket(DLNode * temp)$/;"	f
CallBackShowChar	DoubleLink.c	/^void CallBackShowChar(void *data)$/;"	f
CallBackShowChar	ds/DoubleLink.c	/^void CallBackShowChar(void *data)$/;"	f
CallBackShowInt	DoubleLink.c	/^void CallBackShowInt(void *data)$/;"	f
CallBackShowInt	ds/DoubleLink.c	/^void CallBackShowInt(void *data)$/;"	f
CallBackShowNetPacketOff	ThreadTest.c	/^void CallBackShowNetPacketOff(const void *data)$/;"	f
CallBackShowStr	DoubleLink.c	/^void CallBackShowStr(void *data)$/;"	f
CallBackShowStr	ds/DoubleLink.c	/^void CallBackShowStr(void *data)$/;"	f
CreateList	DoubleLink.c	/^DLNode *CreateList()$/;"	f
CreateList	ds/DoubleLink.c	/^DLNode *CreateList()$/;"	f
DLNode	DoubleLink.c	/^}DLNode;$/;"	t	typeref:struct:_DoubleLink	file:
DLNode	DoubleLink.h	/^}DLNode;$/;"	t	typeref:struct:_DoubleLink
DLNode	ds/DoubleLink.c	/^}DLNode;$/;"	t	typeref:struct:_DoubleLink	file:
DLNode	ds/DoubleLink.h	/^}DLNode;$/;"	t	typeref:struct:_DoubleLink
DeleteList	DoubleLink.c	/^void DeleteList(DLNode *List, void *data, int (*CallBackCmp)(const void *, const void *), void (*CallBackDelete)(DLNode *))$/;"	f
DeleteList	ds/DoubleLink.c	/^void DeleteList(DLNode *List, void *data, int (*CallBackCmp)(const void *, const void *), void (*CallBackDelete)(DLNode *))$/;"	f
DropList	DoubleLink.c	/^void DropList(DLNode *List, void (*CallBackDrop)(DLNode *))$/;"	f
DropList	ds/DoubleLink.c	/^void DropList(DLNode *List, void (*CallBackDrop)(DLNode *))$/;"	f
InsertList	DoubleLink.c	/^void InsertList(DLNode *List, void *data)$/;"	f
InsertList	ds/DoubleLink.c	/^void InsertList(DLNode *List, void *data, int (*CallBackCmp)(const void *, const void *))$/;"	f
Judge	ThreadTest.c	/^DLNode *Judge(DLNode *Two_List,void *data, int (*CallBackCmp)(const void *, const void *))$/;"	f
List	ThreadTest.c	/^DLNode *List = NULL;$/;"	v
NetFlag	ThreadTest.c	/^}NetFlag;$/;"	t	typeref:struct:_NetFlag	file:
NetPacket	ThreadTest.c	/^}NetPacket;$/;"	t	typeref:struct:_NetPacket	file:
Partion	DoubleLink.c	/^static DLNode *Partion(DLNode * List, DLNode * p_one, DLNode * p_two, int (*CallBackCmp)(const void *, const void *))$/;"	f	file:
Partion	ds/DoubleLink.c	/^static DLNode *Partion(DLNode * List, DLNode * p_one, DLNode * p_two, int (*CallBackCmp)(const void *, const void *))$/;"	f	file:
QuickSort	DoubleLink.c	/^static void QuickSort(DLNode * List, DLNode * p_one, DLNode * p_two, int (*CallBackCmp)(const void *, const void *))$/;"	f	file:
QuickSort	ds/DoubleLink.c	/^static void QuickSort(DLNode * List, DLNode * p_one, DLNode * p_two, int (*CallBackCmp)(const void *, const void *))$/;"	f	file:
RM	Makefile	/^RM = rm -fr *.o *.a *.out$/;"	m
SearchList	DoubleLink.c	/^DLNode *SearchList(DLNode *List, void *data, int (*CallBackCmp)(const void *, const void *))$/;"	f
SearchList	ds/DoubleLink.c	/^DLNode *SearchList(DLNode *List, void *data, int (*CallBackCmp)(const void *, const void *))$/;"	f
SequenceList	DoubleLink.c	/^DLNode *SequenceList(DLNode *List, int flag, int (*CallBackCmp)(const void *,const void *))$/;"	f
SequenceList	ds/DoubleLink.c	/^DLNode *SequenceList(DLNode *List, int flag, int (*CallBackCmp)(const void *,const void *))$/;"	f
ShowList	DoubleLink.c	/^int ShowList(DLNode *List, int judge, void (*CallBackShow)(const void *))$/;"	f
ShowList	ds/DoubleLink.c	/^int ShowList(DLNode *List, int judge, void (*CallBackShow)(const void *))$/;"	f
Two_List	ThreadTest.c	/^	DLNode *Two_List;$/;"	m	struct:_NetFlag	file:
UpdateList	DoubleLink.c	/^void UpdateList(DLNode *List, void *data_search, void *data_change, int (*CallBackCmp)(const void *, const void *))$/;"	f
UpdateList	ds/DoubleLink.c	/^void UpdateList(DLNode *List, void *data_search, void *data_change, int (*CallBackCmp)(const void *, const void *))$/;"	f
_DoubleLink	DoubleLink.c	/^typedef struct _DoubleLink$/;"	s	file:
_DoubleLink	DoubleLink.h	/^typedef struct _DoubleLink$/;"	s
_DoubleLink	ds/DoubleLink.c	/^typedef struct _DoubleLink$/;"	s	file:
_DoubleLink	ds/DoubleLink.h	/^typedef struct _DoubleLink$/;"	s
_NetFlag	ThreadTest.c	/^typedef struct _NetFlag$/;"	s	file:
_NetPacket	ThreadTest.c	/^typedef struct _NetPacket$/;"	s	file:
__DOUBLELINK_H__	DoubleLink.h	14;"	d
__DOUBLELINK_H__	ds/DoubleLink.h	14;"	d
back	DoubleLink.c	/^	struct _DoubleLink *back;  \/\/\/<双向链表的前区$/;"	m	struct:_DoubleLink	typeref:struct:_DoubleLink::_DoubleLink	file:
back	DoubleLink.h	/^	struct _DoubleLink *back;  \/\/\/<双向链表的前区$/;"	m	struct:_DoubleLink	typeref:struct:_DoubleLink::_DoubleLink
back	ds/DoubleLink.c	/^	struct _DoubleLink *back;  \/\/\/<双向链表的前区$/;"	m	struct:_DoubleLink	typeref:struct:_DoubleLink::_DoubleLink	file:
back	ds/DoubleLink.h	/^	struct _DoubleLink *back;  \/\/\/<双向链表的前区$/;"	m	struct:_DoubleLink	typeref:struct:_DoubleLink::_DoubleLink
cap_len	ThreadTest.c	/^	int cap_len;$/;"	m	struct:_NetFlag	file:
cleanup_handler	h/chongzai.c	/^static void cleanup_handler(void *arg)$/;"	f	file:
cond	ThreadTest.c	/^static pthread_cond_t cond = PTHREAD_COND_INITIALIZER;$/;"	v	file:
cond	h/chongzai.c	/^static pthread_cond_t cond = PTHREAD_COND_INITIALIZER;$/;"	v	file:
data	DoubleLink.c	/^	void *data; \/\/\/<双向链表中的数据$/;"	m	struct:_DoubleLink	file:
data	DoubleLink.h	/^	void *data; \/\/\/<双向链表中的数据$/;"	m	struct:_DoubleLink
data	ds/DoubleLink.c	/^	void *data; \/\/\/<双向链表中的数据$/;"	m	struct:_DoubleLink	file:
data	ds/DoubleLink.h	/^	void *data; \/\/\/<双向链表中的数据$/;"	m	struct:_DoubleLink
first_fregment	ThreadTest.c	/^	int first_fregment;$/;"	m	struct:_NetFlag	file:
head	h/chongzai.c	/^} *head = NULL;$/;"	v	typeref:struct:node
insid	ThreadTest.c	/^void insid(DLNode *List,int i)$/;"	f
insnet	ThreadTest.c	/^void insnet(DLNode *Two_List, int np_id)$/;"	f
last_fregment	ThreadTest.c	/^	int last_fregment;$/;"	m	struct:_NetFlag	file:
main	ThreadTest.c	/^int main(int argc, char **argv)$/;"	f
main	h/chongzai.c	/^int main(void)$/;"	f
mtx	h/chongzai.c	/^static pthread_mutex_t mtx = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
n_next	h/chongzai.c	/^struct node *n_next;$/;"	m	struct:node	typeref:struct:node::node	file:
n_number	h/chongzai.c	/^int n_number;$/;"	m	struct:node	file:
next	DoubleLink.c	/^	struct _DoubleLink *next;  \/\/\/<双向链表的后区$/;"	m	struct:_DoubleLink	typeref:struct:_DoubleLink::_DoubleLink	file:
next	DoubleLink.h	/^	struct _DoubleLink *next;  \/\/\/<双向链表的后区$/;"	m	struct:_DoubleLink	typeref:struct:_DoubleLink::_DoubleLink
next	ds/DoubleLink.c	/^	struct _DoubleLink *next;  \/\/\/<双向链表的后区$/;"	m	struct:_DoubleLink	typeref:struct:_DoubleLink::_DoubleLink	file:
next	ds/DoubleLink.h	/^	struct _DoubleLink *next;  \/\/\/<双向链表的后区$/;"	m	struct:_DoubleLink	typeref:struct:_DoubleLink::_DoubleLink
node	h/chongzai.c	/^struct node {$/;"	s	file:
np_df	ThreadTest.c	/^	int np_df;$/;"	m	struct:_NetPacket	file:
np_id	ThreadTest.c	/^	int np_id;$/;"	m	struct:_NetFlag	file:
np_id	ThreadTest.c	/^	int np_id;$/;"	m	struct:_NetPacket	file:
np_mf	ThreadTest.c	/^	int np_mf;$/;"	m	struct:_NetPacket	file:
np_off	ThreadTest.c	/^	int np_off;$/;"	m	struct:_NetPacket	file:
np_packet	ThreadTest.c	/^	u_char *np_packet;$/;"	m	struct:_NetPacket	file:
start	ThreadTest.c	/^	clock_t start;$/;"	m	struct:_NetFlag	file:
test	ThreadTest.c	/^void *test()$/;"	f
test_thread	ThreadTest.c	/^pthread_t test_thread;$/;"	v
testlock	ThreadTest.c	/^static pthread_mutex_t testlock;$/;"	v	file:
thread_func	h/chongzai.c	/^static void *thread_func(void *arg)$/;"	f	file:
tol_len	ThreadTest.c	/^	int tol_len;$/;"	m	struct:_NetFlag	file:
