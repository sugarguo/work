!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AR	Makefile	/^AR = ar rcs$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CallBackCmpChar	DoubleLink.c	/^int CallBackCmpChar(const void *one, const void *two)$/;"	f
CallBackCmpInt	DoubleLink.c	/^int CallBackCmpInt(const void *one, const void *two)$/;"	f
CallBackCmpStr	DoubleLink.c	/^int CallBackCmpStr(const void *one, const void *two)$/;"	f
CallBackCmpStr_K	DoubleLink.c	/^int CallBackCmpStr_K(const void *one, const void *two)$/;"	f
CallBackShow	DoubleLink.c	/^int CallBackShow(void *one, int flag)$/;"	f
CreateList	DoubleLink.c	/^DLNode *CreateList()$/;"	f
DLNode	DoubleLink.c	/^}DLNode;$/;"	t	typeref:struct:_DoubleLink	file:
DLNode	DoubleLink.h	/^}DLNode;$/;"	t	typeref:struct:_DoubleLink
DeleteList	DoubleLink.c	/^void DeleteList(DLNode *List, void *data, int (*CallBackCmp)(const void *, const void *))$/;"	f
DropList	DoubleLink.c	/^void DropList(DLNode *List)$/;"	f
GetFileContent	GetOptTest.c	/^DLNode *GetFileContent(DLNode *List_Content, char *filename)$/;"	f
GetStatistics	GetOptTest.c	/^int GetStatistics(char *filename, int hflag, int pflag)$/;"	f
InsertList	DoubleLink.c	/^void InsertList(DLNode *List, void *data)$/;"	f
MAX_LINE	GetOptTest.c	19;"	d	file:
Partion	DoubleLink.c	/^DLNode *Partion(DLNode * List, DLNode * p_one, DLNode * p_two, int (*CallBackCmp)(const void *, const void *))$/;"	f
QuickSort	DoubleLink.c	/^void QuickSort(DLNode * List, DLNode * p_one, DLNode * p_two, int (*CallBackCmp)(const void *, const void *))$/;"	f
RM	Makefile	/^RM = rm -fr *.o *.a *.out$/;"	m
SearchList	DoubleLink.c	/^DLNode *SearchList(DLNode *List, void *data, int (*CallBackCmp)(const void *, const void *))$/;"	f
SequenceList	DoubleLink.c	/^DLNode *SequenceList(DLNode *List, int flag, int (*CallBackCmp)(const void *,const void *))$/;"	f
ShowList	DoubleLink.c	/^int ShowList(DLNode *List, int flag, int judge)$/;"	f
StatisticsContent	GetOptTest.c	/^DLNode *StatisticsContent(DLNode *List_Content)$/;"	f
UpdateList	DoubleLink.c	/^void UpdateList(DLNode *List, void *data_search, void *data_change, int (*CallBackCmp)(const void *, const void *))$/;"	f
VS_StrLTrim	GetOptTest.c	/^void VS_StrLTrim(char *pStr)  $/;"	f
VS_StrRTrim	GetOptTest.c	/^void VS_StrRTrim(char *pStr)  $/;"	f
_DoubleLink	DoubleLink.c	/^typedef struct _DoubleLink$/;"	s	file:
_DoubleLink	DoubleLink.h	/^typedef struct _DoubleLink$/;"	s
__DOUBLELINK_H__	DoubleLink.h	13;"	d
back	DoubleLink.c	/^	struct _DoubleLink *back;  \/\/\/<双向链表的前区$/;"	m	struct:_DoubleLink	typeref:struct:_DoubleLink::_DoubleLink	file:
back	DoubleLink.h	/^	struct _DoubleLink *back;  \/\/\/<双向链表的前区$/;"	m	struct:_DoubleLink	typeref:struct:_DoubleLink::_DoubleLink
data	DoubleLink.c	/^	void *data; \/\/\/<双向链表中的数据$/;"	m	struct:_DoubleLink	file:
data	DoubleLink.h	/^	void *data; \/\/\/<双向链表中的数据$/;"	m	struct:_DoubleLink
display_usage	GetOptTest.c	/^void display_usage( void )$/;"	f
filename	GetOptTest.c	/^	char *filename;$/;"	m	struct:globalArgs_t	file:
getLine	GetOptTest.c	/^int getLine(char *filename, int lflag)$/;"	f
globalArgs	GetOptTest.c	/^}globalArgs;$/;"	v	typeref:struct:globalArgs_t
globalArgs_t	GetOptTest.c	/^struct globalArgs_t{$/;"	s	file:
hflag	GetOptTest.c	/^	int hflag;$/;"	m	struct:globalArgs_t	file:
lflag	GetOptTest.c	/^	int lflag;$/;"	m	struct:globalArgs_t	file:
main	GetOptTest.c	/^int main(int argc, char **argv)$/;"	f
next	DoubleLink.c	/^	struct _DoubleLink *next;  \/\/\/<双向链表的后区$/;"	m	struct:_DoubleLink	typeref:struct:_DoubleLink::_DoubleLink	file:
next	DoubleLink.h	/^	struct _DoubleLink *next;  \/\/\/<双向链表的后区$/;"	m	struct:_DoubleLink	typeref:struct:_DoubleLink::_DoubleLink
optString	GetOptTest.c	/^static const char *optString = "f:hplso:?";$/;"	v	file:
outFile	GetOptTest.c	/^	FILE *outFile;$/;"	m	struct:globalArgs_t	file:
pflag	GetOptTest.c	/^	int pflag;$/;"	m	struct:globalArgs_t	file:
